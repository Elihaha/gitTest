<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bst.common.mapper.pay.OrderPayRecordMapper">
  <resultMap id="BaseResultMap" type="com.bst.common.entity.pay.OrderPayRecord">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="order_id" jdbcType="BIGINT" property="orderId" />
    <result column="pay_no" jdbcType="VARCHAR" property="payNo" />
    <result column="pay_amount" jdbcType="DECIMAL" property="payAmount" />
    <result column="pay_create" jdbcType="TIMESTAMP" property="payCreate" />
    <result column="finish_time" jdbcType="TIMESTAMP" property="finishTime" />
    <result column="pay_status" jdbcType="TINYINT" property="payStatus" />
  </resultMap>
  <sql id="Base_Column_List">
    id, order_id, pay_no,  pay_amount, pay_create, finish_time, pay_status
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from order_pay_record
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from order_pay_record
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.bst.common.entity.pay.OrderPayRecord" useGeneratedKeys="true">
    insert into order_pay_record (order_id, pay_no, pay_type,
      pay_amount, pay_create, finish_time, 
      pay_status)
    values (#{orderId,jdbcType=BIGINT}, #{payNo,jdbcType=VARCHAR}, #{payType,jdbcType=TINYINT}, 
      #{payAmount,jdbcType=DECIMAL}, #{payCreate,jdbcType=TIMESTAMP}, #{finishTime,jdbcType=TIMESTAMP}, 
      #{payStatus,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.bst.common.entity.pay.OrderPayRecord" useGeneratedKeys="true">
    insert into order_pay_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        order_id,
      </if>
      <if test="payNo != null">
        pay_no,
      </if>

      <if test="payAmount != null">
        pay_amount,
      </if>
      <if test="payCreate != null">
        pay_create,
      </if>
      <if test="finishTime != null">
        finish_time,
      </if>
      <if test="payStatus != null">
        pay_status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        #{orderId,jdbcType=BIGINT},
      </if>
      <if test="payNo != null">
        #{payNo,jdbcType=VARCHAR},
      </if>
      <if test="payType != null">
        #{payType,jdbcType=TINYINT},
      </if>
      <if test="payAmount != null">
        #{payAmount,jdbcType=DECIMAL},
      </if>
      <if test="payCreate != null">
        #{payCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="finishTime != null">
        #{finishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="payStatus != null">
        #{payStatus,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.bst.common.entity.pay.OrderPayRecord">
    update order_pay_record
    <set>
      <if test="orderId != null">
        order_id = #{orderId,jdbcType=BIGINT},
      </if>
      <if test="payNo != null">
        pay_no = #{payNo,jdbcType=VARCHAR},
      </if>

      <if test="payAmount != null">
        pay_amount = #{payAmount,jdbcType=DECIMAL},
      </if>
      <if test="payCreate != null">
        pay_create = #{payCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="finishTime != null">
        finish_time = #{finishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="payStatus != null">
        pay_status = #{payStatus,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bst.common.entity.pay.OrderPayRecord">
    update order_pay_record
    set order_id = #{orderId,jdbcType=BIGINT},
      pay_no = #{payNo,jdbcType=VARCHAR},

      pay_amount = #{payAmount,jdbcType=DECIMAL},
      pay_create = #{payCreate,jdbcType=TIMESTAMP},
      finish_time = #{finishTime,jdbcType=TIMESTAMP},
      pay_status = #{payStatus,jdbcType=TINYINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>