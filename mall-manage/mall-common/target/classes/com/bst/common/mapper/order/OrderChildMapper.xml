<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bst.common.mapper.order.OrderChildMapper">
    <resultMap id="BaseResultMap" type="com.bst.common.entity.order.OrderChild">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="main_id" jdbcType="BIGINT" property="mainId"/>
        <result column="order_no" jdbcType="VARCHAR" property="orderNo"/>
        <result column="explain" jdbcType="VARCHAR" property="explain"/>
        <result column="goods_count" jdbcType="INTEGER" property="goodsCount"/>
        <result column="price" jdbcType="INTEGER" property="price"/>
        <result column="STATUS" jdbcType="TINYINT" property="status"/>
        <result column="is_return" jdbcType="BIT" property="isReturn"/>
        <result column="sales_return_time" jdbcType="TIMESTAMP" property="salesReturnTime"/>
        <result column="remark" jdbcType="VARCHAR" property="remark"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, main_id, order_no, `explain`, goods_count, price, STATUS, is_return, sales_return_time,
    remark
  </sql>
    <select id="selectByExample" parameterType="com.bst.common.entity.order.OrderChildExample"
            resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from order_child
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from order_child
        where id = #{id,jdbcType=BIGINT}
    </select>
    <select id="selectByOrderNo" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from order_child
        where order_no= #{orderNo,jdbcType=VARCHAR}
    </select>
    <select id="selectByMainId" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from order_child
        where main_id= #{mainId,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from order_child
    where id = #{id,jdbcType=BIGINT}
  </delete>
    <delete id="deleteByExample" parameterType="com.bst.common.entity.order.OrderChildExample">
        delete from order_child
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.bst.common.entity.order.OrderChild"
            useGeneratedKeys="true">
    insert into order_child (main_id, order_no, explain, 
      goods_count, price, STATUS, 
      is_return, sales_return_time, remark
      )
    values (#{mainId,jdbcType=BIGINT}, #{orderNo,jdbcType=VARCHAR}, #{explain,jdbcType=VARCHAR}, 
      #{goodsCount,jdbcType=INTEGER}, #{price,jdbcType=INTEGER}, #{status,jdbcType=TINYINT}, 
      #{isReturn,jdbcType=BIT}, #{salesReturnTime,jdbcType=TIMESTAMP}, #{remark,jdbcType=VARCHAR}
      )
  </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.bst.common.entity.order.OrderChild"
            useGeneratedKeys="true">
        insert into order_child
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="mainId != null">
                main_id,
            </if>
            <if test="orderNo != null">
                order_no,
            </if>
            <if test="explain != null">
                `explain`,
            </if>
            <if test="goodsCount != null">
                goods_count,
            </if>
            <if test="price != null">
                price,
            </if>
            <if test="status != null">
                STATUS,
            </if>
            <if test="isReturn != null">
                is_return,
            </if>
            <if test="salesReturnTime != null">
                sales_return_time,
            </if>
            <if test="remark != null">
                remark,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="mainId != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="mainId != null">
                #{mainId,jdbcType=BIGINT},
            </if>
            <if test="orderNo != null">
                #{orderNo,jdbcType=VARCHAR},
            </if>
            <if test="explain != null">
                #{explain,jdbcType=VARCHAR},
            </if>
            <if test="goodsCount != null">
                #{goodsCount,jdbcType=INTEGER},
            </if>
            <if test="price != null">
                #{price,jdbcType=INTEGER},
            </if>
            <if test="status != null">
                #{status,jdbcType=TINYINT},
            </if>
            <if test="isReturn != null">
                #{isReturn,jdbcType=BIT},
            </if>
            <if test="salesReturnTime != null">
                #{salesReturnTime,jdbcType=TIMESTAMP},
            </if>
            <if test="remark != null">
                #{remark,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.bst.common.entity.order.OrderChildExample"
            resultType="java.lang.Long">
        select count(*) from order_child
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update order_child
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.mainId != null">
                main_id = #{record.mainId,jdbcType=BIGINT},
            </if>
            <if test="record.orderNo != null">
                order_no = #{record.orderNo,jdbcType=VARCHAR},
            </if>
            <if test="record.explain != null">
                explain = #{record.explain,jdbcType=VARCHAR},
            </if>
            <if test="record.goodsCount != null">
                goods_count = #{record.goodsCount,jdbcType=INTEGER},
            </if>
            <if test="record.price != null">
                price = #{record.price,jdbcType=INTEGER},
            </if>
            <if test="record.status != null">
                STATUS = #{record.status,jdbcType=TINYINT},
            </if>
            <if test="record.isReturn != null">
                is_return = #{record.isReturn,jdbcType=BIT},
            </if>
            <if test="record.salesReturnTime != null">
                sales_return_time = #{record.salesReturnTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.remark != null">
                remark = #{record.remark,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update order_child
        set id = #{record.id,jdbcType=BIGINT},
        main_id = #{record.mainId,jdbcType=BIGINT},
        order_no = #{record.orderNo,jdbcType=VARCHAR},
        explain = #{record.explain,jdbcType=VARCHAR},
        goods_count = #{record.goodsCount,jdbcType=INTEGER},
        price = #{record.price,jdbcType=INTEGER},
        STATUS = #{record.status,jdbcType=TINYINT},
        is_return = #{record.isReturn,jdbcType=BIT},
        sales_return_time = #{record.salesReturnTime,jdbcType=TIMESTAMP},
        remark = #{record.remark,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.bst.common.entity.order.OrderChild">
        update order_child
        <set>
            <if test="mainId != null">
                main_id = #{mainId,jdbcType=BIGINT},
            </if>
            <if test="orderNo != null">
                order_no = #{orderNo,jdbcType=VARCHAR},
            </if>
            <if test="explain != null">
                `explain` = #{explain,jdbcType=VARCHAR},
            </if>
            <if test="goodsCount != null">
                goods_count = #{goodsCount,jdbcType=INTEGER},
            </if>
            <if test="price != null">
                price = #{price,jdbcType=INTEGER},
            </if>
            <if test="status != null">
                STATUS = #{status,jdbcType=TINYINT},
            </if>
            <if test="isReturn != null">
                is_return = #{isReturn,jdbcType=BIT},
            </if>
            <if test="salesReturnTime != null">
                sales_return_time = #{salesReturnTime,jdbcType=TIMESTAMP},
            </if>
            <if test="remark != null">
                remark = #{remark,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.bst.common.entity.order.OrderChild">
    update order_child
    set main_id = #{mainId,jdbcType=BIGINT},
      order_no = #{orderNo,jdbcType=VARCHAR},
      explain = #{explain,jdbcType=VARCHAR},
      goods_count = #{goodsCount,jdbcType=INTEGER},
      price = #{price,jdbcType=INTEGER},
      STATUS = #{status,jdbcType=TINYINT},
      is_return = #{isReturn,jdbcType=BIT},
      sales_return_time = #{salesReturnTime,jdbcType=TIMESTAMP},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>


    <update id="updateByOrderNo">
		 update order_child
    set

      STATUS = #{status,jdbcType=TINYINT}

    where order_no = #{orderNo,jdbcType=BIGINT}
	</update>
</mapper>