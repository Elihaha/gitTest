<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bst.common.mapper.order.OrderRefundMapper">
    <resultMap id="BaseResultMap" type="com.bst.common.entity.order.OrderRefund">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="order_no" jdbcType="VARCHAR" property="orderNo"/>
        <result column="refund_amount" jdbcType="DECIMAL" property="refundAmount"/>
        <result column="refund_reason" jdbcType="VARCHAR" property="refundReason"/>
        <result column="apply_time" jdbcType="TIMESTAMP" property="applyTime"/>
        <result column="reply_time" jdbcType="TIMESTAMP" property="replyTime"/>
        <result column="refund_time" jdbcType="TIMESTAMP" property="refundTime"/>
        <result column="refund" jdbcType="TINYINT" property="refund"/>
        <result column="refund_type" jdbcType="TINYINT" property="refundType"/>
        <result column="operator" jdbcType="VARCHAR" property="operator"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, order_no, refund_amount, refund_reason, apply_time, reply_time, refund_time, 
    refund, operator,refund_type
  </sql>
    <select id="selectByExample" parameterType="com.bst.common.entity.order.OrderRefundExample"
            resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from order_refund
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from order_refund
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from order_refund
    where id = #{id,jdbcType=BIGINT}
  </delete>
    <delete id="deleteByExample" parameterType="com.bst.common.entity.order.OrderRefundExample">
        delete from order_refund
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.bst.common.entity.order.OrderRefund"
            useGeneratedKeys="true">
    insert into order_refund (order_no, refund_amount, refund_reason, 
      apply_time, reply_time, refund_time, 
      refund, operator,refund_type)
    values (#{orderNo,jdbcType=VARCHAR}, #{refundAmount,jdbcType=DECIMAL}, #{refundReason,jdbcType=VARCHAR},
      #{applyTime,jdbcType=TIMESTAMP}, #{replyTime,jdbcType=TIMESTAMP}, #{refundTime,jdbcType=TIMESTAMP}, 
      #{refund,jdbcType=TINYINT}, #{operator,jdbcType=VARCHAR},#{refundType})
  </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.bst.common.entity.order.OrderRefund"
            useGeneratedKeys="true">
        insert into order_refund
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="orderNo != null">
                order_no,
            </if>
            <if test="refundAmount != null">
                refund_amount,
            </if>
            <if test="refundReason != null">
                refund_reason,
            </if>
            <if test="applyTime != null">
                apply_time,
            </if>
            <if test="replyTime != null">
                reply_time,
            </if>
            <if test="refundTime != null">
                refund_time,
            </if>
            <if test="refund != null">
                refund,
            </if>
            <if test="operator != null">
                operator,
            </if>
            <if test="refundType != null">
                refun_type,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="orderNo != null">
                #{orderNo,jdbcType=VARCHAR},
            </if>
            <if test="refundAmount != null">
                #{refundAmount,jdbcType=DECIMAL},
            </if>
            <if test="refundReason != null">
                #{refundReason,jdbcType=VARCHAR},
            </if>
            <if test="applyTime != null">
                #{applyTime,jdbcType=TIMESTAMP},
            </if>
            <if test="replyTime != null">
                #{replyTime,jdbcType=TIMESTAMP},
            </if>
            <if test="refundTime != null">
                #{refundTime,jdbcType=TIMESTAMP},
            </if>
            <if test="refund != null">
                #{refund,jdbcType=TINYINT},
            </if>
            <if test="operator != null">
                #{operator,jdbcType=VARCHAR},
            </if>
            <if test="refundType != null">
                #{refundType,jdbcType=TINYINT},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.bst.common.entity.order.OrderRefundExample"
            resultType="java.lang.Long">
        select count(*) from order_refund
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update order_refund
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.orderNo != null">
                order_no = #{record.orderNo,jdbcType=VARCHAR},
            </if>
            <if test="record.refundAmount != null">
                refund_amount = #{record.refundAmount,jdbcType=DECIMAL},
            </if>
            <if test="record.refundReason != null">
                refund_reason = #{record.refundReason,jdbcType=VARCHAR},
            </if>
            <if test="record.applyTime != null">
                apply_time = #{record.applyTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.replyTime != null">
                reply_time = #{record.replyTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.refundTime != null">
                refund_time = #{record.refundTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.refund != null">
                refund = #{record.refund,jdbcType=TINYINT},
            </if>
            <if test="record.operator != null">
                operator = #{record.operator,jdbcType=VARCHAR},
            </if>
            <if test="record.refundType != null">
                refund_type = #{record.refundType,jdbcType=TINYINT},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update order_refund
        set id = #{record.id,jdbcType=BIGINT},
        order_no = #{record.orderNo,jdbcType=VARCHAR},
        refund_amount = #{record.refundAmount,jdbcType=DECIMAL},
        refund_reason = #{record.refundReason,jdbcType=VARCHAR},
        apply_time = #{record.applyTime,jdbcType=TIMESTAMP},
        reply_time = #{record.replyTime,jdbcType=TIMESTAMP},
        refund_time = #{record.refundTime,jdbcType=TIMESTAMP},
        refund = #{record.refund,jdbcType=TINYINT},
        refund_type = #{record.refundType,jdbcType=TINYINT},
        operator = #{record.operator,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.bst.common.entity.order.OrderRefund">
        update order_refund
        <set>
            <if test="orderNo != null">
                order_no = #{orderNo,jdbcType=VARCHAR},
            </if>
            <if test="refundAmount != null">
                refund_amount = #{refundAmount,jdbcType=DECIMAL},
            </if>
            <if test="refundReason != null">
                refund_reason = #{refundReason,jdbcType=VARCHAR},
            </if>
            <if test="applyTime != null">
                apply_time = #{applyTime,jdbcType=TIMESTAMP},
            </if>
            <if test="replyTime != null">
                reply_time = #{replyTime,jdbcType=TIMESTAMP},
            </if>
            <if test="refundTime != null">
                refund_time = #{refundTime,jdbcType=TIMESTAMP},
            </if>
            <if test="refund != null">
                refund = #{refund,jdbcType=TINYINT},
            </if>
            <if test="refundType != null">
                refund_type = #{refundType,jdbcType=TINYINT},
            </if>
            <if test="operator != null">
                operator = #{operator,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.bst.common.entity.order.OrderRefund">
    update order_refund
    set order_no = #{orderNo,jdbcType=VARCHAR},
      refund_amount = #{refundAmount,jdbcType=DECIMAL},
      refund_reason = #{refundReason,jdbcType=VARCHAR},
      apply_time = #{applyTime,jdbcType=TIMESTAMP},
      reply_time = #{replyTime,jdbcType=TIMESTAMP},
      refund_time = #{refundTime,jdbcType=TIMESTAMP},
      refund = #{refund,jdbcType=TINYINT},
      refund_type = #{refundType,jdbcType=TINYINT},
      operator = #{operator,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
    <select id="selectByOrderNo" parameterType="string" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        from order_refund where order_no=#{orderNo,jdbcType=VARCHAR}
    </select>
</mapper>