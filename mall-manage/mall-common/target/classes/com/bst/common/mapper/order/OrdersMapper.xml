<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bst.common.mapper.order.OrdersMapper">
    <resultMap id="BaseResultMap" type="com.bst.common.entity.order.Orders">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="order_no" jdbcType="VARCHAR" property="orderNo"/>
        <result column="consumer_id" jdbcType="VARCHAR" property="consumerId"/>
        <result column="consumer_name" jdbcType="VARCHAR" property="consumerName"/>
        <result column="telephone" jdbcType="VARCHAR" property="telephone"/>
        <result column="shop_id" jdbcType="BIGINT" property="shopId"/>
        <result column="shop_name" jdbcType="VARCHAR" property="shopName"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="order_status" jdbcType="TINYINT" property="orderStatus"/>
        <result column="pay_status" jdbcType="TINYINT" property="payStatus"/>
        <result column="goods_count" jdbcType="INTEGER" property="goodsCount"/>
        <result column="total_amount" jdbcType="INTEGER" property="totalAmount"/>
        <result column="consumer_remark" jdbcType="VARCHAR" property="consumerRemark"/>
        <result column="pay_time" jdbcType="TIMESTAMP" property="payTime"/>
        <result column="is_return" jdbcType="BIT" property="isReturn"/>
        <result column="sales_return_time" jdbcType="TIMESTAMP" property="salesReturnTime"/>
        <result column="have_child" jdbcType="BIT" property="haveChild"/>
        <result column="last_update" jdbcType="TIMESTAMP" property="lastUpdate"/>
        <result column="delivery_time" jdbcType="TIMESTAMP" property="deliveryTime"/>
        <result column="postage" jdbcType="DECIMAL" property="postage"/>
        <result column="timestampNum" property="timestampNum" javaType="java.lang.Integer"/>

    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, order_no, consumer_id, consumer_name, telephone, shop_id, shop_name, create_time, 
    order_status, pay_status, goods_count, total_amount, consumer_remark, pay_time, is_return, 
    sales_return_time, have_child, last_update, delivery_time, postage
  </sql>
    <select id="selectByExample" parameterType="com.bst.common.entity.order.OrdersExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from order_orders
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from order_orders
        where id = #{id,jdbcType=BIGINT}
    </select>
    <select id="selectByOrderNo" parameterType="com.bst.common.entity.order.OrdersExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from order_orders
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <!--动态SQL语句，多条件查询-->
    <select id="selectByMap" resultMap="BaseResultMap">
        select * from order_oders
        <include refid="list"></include>
    </select>
    <sql id="list">
        <where>
            <if test="OrderStatus != null">
                and order_status = #{OrderStatus,jdbcType=TINYINT}
            </if>
            <if test="OrderNo!=null">
                and order_no = #{OrderNo,jdbcType=VARCHAR}
            </if>
            <if test="ConsumerName != null">
                and consumer_name = #{consumerName,jdbcType=VARCHAR}
            </if>
            <if test="Telephone != null">
                and telephone = #{Telephone,jdbcType=VARCHAR}
            </if>
            <if test="startUpdate != null">
                and last_update &gt; #{startUpdate,jdbcType=TIMESTAMP}
            </if>
            <if test="endUpdate != null">
                and last_update &lt; #{endUpdate,jdbcType=TIMESTAMP}
            </if>

        </where>
    </sql>
    <!--parameterType ="com.bst.common.modle.order.OrdersQuery"-->
    <select id="queryListByRecord" resultType="com.bst.common.modle.orders.OrdersResult">
        select orders.id id, orders.order_no orderNo,
        goods_spu.goods_name goodsName,
        orders.goods_count goodsCount,
        orders.total_amount totalAmount,
        orders.consumer_name consumerName,
        orders.telephone telephone,
        orders.create_time createTime,
        orders.pay_time payTime,
        orders.last_update lastUpdate,
        orders.delivery_time deliveryTime,
        orders.order_status orderStatus,
        orders.pay_type payType from order_orders orders
        INNER JOIN order_detail ON order_detail.order_id = orders.id
        INNER JOIN goods_spu ON goods_spu.spu_no = order_detail.spu_no
        INNER JOIN shop_info info on orders.shop_id = info.id
        left JOIN order_refund on order_refund.order_no = orders.order_no
        where info.permission_id = #{userId ,jdbcType=BIGINT}
        <if test="orderStatus != null and orderStatus != ''">
            AND orders.order_status = #{orderStatus}
        </if>
        <if test="orderNo!=null">
            and
            LOCATE(#{orderNo},orders.order_no) > 0
        </if>
        <if test="consumerName != null">
            and
            LOCATE(#{consumerName},orders.consumer_name)>0
        </if>
        <if test="telephone != null">
            and
            LOCATE(#{telephone}, orders.telephone)>0
        </if>
        <if test="startUpdate != null">
            and orders.last_update &gt; #{startUpdate}
        </if>
        <if test="endUpdate != null">
            and orders.last_update &lt; #{endUpdate}
        </if>
        <if test="refund != null">
            order_refund.refund = #{refund}
        </if>
        ORDER BY orders.create_time desc

    </select>

    <select id="queryOrderDetail" parameterType="java.lang.Long" resultType="com.bst.common.modle.orders.DetailResult">
select order_orders.order_status orderStatus ,order_orders.order_no orderNo, order_orders.create_time createTime,
order_orders.pay_time payTime,order_orders.delivery_time deliveryTime,
order_orders.consumer_name consumerName,order_orders.telephone telephone,
order_orders.total_amount totalAmount,order_orders.postage postage,
order_orders.goods_count goodsCount,order_pay_record.pay_create payCreate
from order_orders LEFT JOIN order_pay_record
on  order_pay_record.order_id = order_orders.id
where order_orders.id =#{orderid,jdbcType=BIGINT}
  </select>
    <select id="queryAllOrderDetail" resultType="com.bst.common.modle.order.AllOrdersQuery">
        SELECT
        order_orders.id, order_orders.order_no, order_orders.consumer_id, order_orders.consumer_name,
        order_orders.telephone, order_orders.shop_id, order_orders.shop_name, order_orders.create_time,
        order_orders.order_status,order_orders.pay_status, order_orders.goods_count, order_orders.total_amount,
        order_orders.consumer_remark, order_orders.pay_time, order_orders.is_return, order_orders.sales_return_time,
        order_orders.have_child, order_orders.last_update, order_orders.delivery_time, order_orders.postage
        ,order_detail.order_details orderDetails
        FROM order_orders ,order_detail where
        order_detail.order_id = order_orders.id and order_orders.consumer_id = #{userId}
        <if test="ordersStatus!= null and orderStatus != ''">
            AND order_orders.order_status = #{ordersStatus}
        </if>
        order by order_orders.create_time DESC

        limit #{page}, #{rows}
    </select>
    <select id="queryCount" resultType="java.lang.Integer">
        select COUNT(*) from ( SELECT
        order_orders.id, order_orders.order_no, order_orders.consumer_id, order_orders.consumer_name,
        order_orders.telephone, order_orders.shop_id, order_orders.shop_name, order_orders.create_time,
        order_orders.order_status,order_orders.pay_status, order_orders.goods_count, order_orders.total_amount,
        order_orders.consumer_remark, order_orders.pay_time, order_orders.is_return, order_orders.sales_return_time,
        order_orders.have_child, order_orders.last_update, order_orders.delivery_time, order_orders.postage
        ,order_detail.order_details orderDetails
        FROM order_orders ,order_detail where
        order_detail.order_id = order_orders.id and order_orders.consumer_id = #{userId}
        <if test="ordersStatus!= null and orderStatus != ''">
            AND order_orders.order_status = #{ordersStatus}
        </if>
        order by order_orders.create_time DESC) t
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from order_orders
    where id = #{id,jdbcType=BIGINT}
  </delete>
    <delete id="deleteByExample" parameterType="com.bst.common.entity.order.OrdersExample">
        delete from order_orders
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.bst.common.entity.order.Orders"
            useGeneratedKeys="true">
    insert into order_orders (order_no, consumer_id, consumer_name, 
      telephone, shop_id, shop_name, 
      create_time, order_status, pay_status, 
      goods_count, total_amount, consumer_remark, 
      pay_time, is_return, sales_return_time, 
      have_child, last_update, delivery_time, 
      postage)
    values (#{orderNo,jdbcType=VARCHAR}, #{consumerId,jdbcType=VARCHAR}, #{consumerName,jdbcType=VARCHAR}, 
      #{telephone,jdbcType=VARCHAR}, #{shopId,jdbcType=BIGINT}, #{shopName,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{orderStatus,jdbcType=TINYINT}, #{payStatus,jdbcType=TINYINT}, 
      #{goodsCount,jdbcType=INTEGER}, #{totalAmount,jdbcType=INTEGER}, #{consumerRemark,jdbcType=VARCHAR}, 
      #{payTime,jdbcType=TIMESTAMP}, #{isReturn,jdbcType=BIT}, #{salesReturnTime,jdbcType=TIMESTAMP}, 
      #{haveChild,jdbcType=BIT}, #{lastUpdate,jdbcType=TIMESTAMP}, #{deliveryTime,jdbcType=TIMESTAMP}, 
      #{postage,jdbcType=DECIMAL})
  </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.bst.common.entity.order.Orders"
            useGeneratedKeys="true">
        insert into order_orders
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="orderNo != null">
                order_no,
            </if>
            <if test="consumerId != null">
                consumer_id,
            </if>
            <if test="consumerName != null">
                consumer_name,
            </if>
            <if test="telephone != null">
                telephone,
            </if>
            <if test="shopId != null">
                shop_id,
            </if>
            <if test="shopName != null">
                shop_name,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="orderStatus != null">
                order_status,
            </if>
            <if test="payStatus != null">
                pay_status,
            </if>
            <if test="goodsCount != null">
                goods_count,
            </if>
            <if test="totalAmount != null">
                total_amount,
            </if>
            <if test="consumerRemark != null">
                consumer_remark,
            </if>
            <if test="payTime != null">
                pay_time,
            </if>
            <if test="isReturn != null">
                is_return,
            </if>
            <if test="salesReturnTime != null">
                sales_return_time,
            </if>
            <if test="haveChild != null">
                have_child,
            </if>
            <if test="lastUpdate != null">
                last_update,
            </if>
            <if test="deliveryTime != null">
                delivery_time,
            </if>
            <if test="postage != null">
                postage,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="orderNo != null">
                #{orderNo,jdbcType=VARCHAR},
            </if>
            <if test="consumerId != null">
                #{consumerId,jdbcType=VARCHAR},
            </if>
            <if test="consumerName != null">
                #{consumerName,jdbcType=VARCHAR},
            </if>
            <if test="telephone != null">
                #{telephone,jdbcType=VARCHAR},
            </if>
            <if test="shopId != null">
                #{shopId,jdbcType=BIGINT},
            </if>
            <if test="shopName != null">
                #{shopName,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="orderStatus != null">
                #{orderStatus,jdbcType=TINYINT},
            </if>
            <if test="payStatus != null">
                #{payStatus,jdbcType=TINYINT},
            </if>
            <if test="goodsCount != null">
                #{goodsCount,jdbcType=INTEGER},
            </if>
            <if test="totalAmount != null">
                #{totalAmount,jdbcType=INTEGER},
            </if>
            <if test="consumerRemark != null">
                #{consumerRemark,jdbcType=VARCHAR},
            </if>
            <if test="payTime != null">
                #{payTime,jdbcType=TIMESTAMP},
            </if>
            <if test="isReturn != null">
                #{isReturn,jdbcType=BIT},
            </if>
            <if test="salesReturnTime != null">
                #{salesReturnTime,jdbcType=TIMESTAMP},
            </if>
            <if test="haveChild != null">
                #{haveChild,jdbcType=BIT},
            </if>
            <if test="lastUpdate != null">
                #{lastUpdate,jdbcType=TIMESTAMP},
            </if>
            <if test="deliveryTime != null">
                #{deliveryTime,jdbcType=TIMESTAMP},
            </if>
            <if test="postage != null">
                #{postage,jdbcType=DECIMAL},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.bst.common.entity.order.OrdersExample" resultType="java.lang.Long">
        select count(*) from order_orders
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <select id="queryOrderChildDtoByOrderNo" resultType="com.bst.common.modle.order.OrderChildDto">

    SELECT
	orders.id as orderId,
	order_status as orderStatus,
	is_return as isReturn,
	goods_count as goodsCount,
	sales_return_time as salesReturnTime,
	sku.sell_price  as sellPrice,
	sku.sku_name as skuName
FROM
	order_orders AS orders
	LEFT JOIN order_detail AS detail ON orders.order_no = detail.order_no
	left  join goods_sku  as  sku on  detail.sku_no = sku.sku_no
WHERE
	orders.order_no = #{orderNo}
  </select>
    <update id="updateByExampleSelective" parameterType="map">
        update order_orders
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.orderNo != null">
                order_no = #{record.orderNo,jdbcType=VARCHAR},
            </if>
            <if test="record.consumerId != null">
                consumer_id = #{record.consumerId,jdbcType=VARCHAR},
            </if>
            <if test="record.consumerName != null">
                consumer_name = #{record.consumerName,jdbcType=VARCHAR},
            </if>
            <if test="record.telephone != null">
                telephone = #{record.telephone,jdbcType=VARCHAR},
            </if>
            <if test="record.shopId != null">
                shop_id = #{record.shopId,jdbcType=BIGINT},
            </if>
            <if test="record.shopName != null">
                shop_name = #{record.shopName,jdbcType=VARCHAR},
            </if>
            <if test="record.createTime != null">
                create_time = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.orderStatus != null">
                order_status = #{record.orderStatus,jdbcType=TINYINT},
            </if>
            <if test="record.payStatus != null">
                pay_status = #{record.payStatus,jdbcType=TINYINT},
            </if>
            <if test="record.goodsCount != null">
                goods_count = #{record.goodsCount,jdbcType=INTEGER},
            </if>
            <if test="record.totalAmount != null">
                total_amount = #{record.totalAmount,jdbcType=INTEGER},
            </if>
            <if test="record.consumerRemark != null">
                consumer_remark = #{record.consumerRemark,jdbcType=VARCHAR},
            </if>
            <if test="record.payTime != null">
                pay_time = #{record.payTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.isReturn != null">
                is_return = #{record.isReturn,jdbcType=BIT},
            </if>
            <if test="record.salesReturnTime != null">
                sales_return_time = #{record.salesReturnTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.haveChild != null">
                have_child = #{record.haveChild,jdbcType=BIT},
            </if>
            <if test="record.lastUpdate != null">
                last_update = #{record.lastUpdate,jdbcType=TIMESTAMP},
            </if>
            <if test="record.deliveryTime != null">
                delivery_time = #{record.deliveryTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.postage != null">
                postage = #{record.postage,jdbcType=DECIMAL},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update order_orders
        set id = #{record.id,jdbcType=BIGINT},
        order_no = #{record.orderNo,jdbcType=VARCHAR},
        consumer_id = #{record.consumerId,jdbcType=VARCHAR},
        consumer_name = #{record.consumerName,jdbcType=VARCHAR},
        telephone = #{record.telephone,jdbcType=VARCHAR},
        shop_id = #{record.shopId,jdbcType=BIGINT},
        shop_name = #{record.shopName,jdbcType=VARCHAR},
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
        order_status = #{record.orderStatus,jdbcType=TINYINT},
        pay_status = #{record.payStatus,jdbcType=TINYINT},
        goods_count = #{record.goodsCount,jdbcType=INTEGER},
        total_amount = #{record.totalAmount,jdbcType=INTEGER},
        consumer_remark = #{record.consumerRemark,jdbcType=VARCHAR},
        pay_time = #{record.payTime,jdbcType=TIMESTAMP},
        is_return = #{record.isReturn,jdbcType=BIT},
        sales_return_time = #{record.salesReturnTime,jdbcType=TIMESTAMP},
        have_child = #{record.haveChild,jdbcType=BIT},
        last_update = #{record.lastUpdate,jdbcType=TIMESTAMP},
        delivery_time = #{record.deliveryTime,jdbcType=TIMESTAMP},
        postage = #{record.postage,jdbcType=DECIMAL}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.bst.common.entity.order.Orders">
        update order_orders
        <set>
            <if test="orderNo != null">
                order_no = #{orderNo,jdbcType=VARCHAR},
            </if>
            <if test="consumerId != null">
                consumer_id = #{consumerId,jdbcType=VARCHAR},
            </if>
            <if test="consumerName != null">
                consumer_name = #{consumerName,jdbcType=VARCHAR},
            </if>
            <if test="telephone != null">
                telephone = #{telephone,jdbcType=VARCHAR},
            </if>
            <if test="shopId != null">
                shop_id = #{shopId,jdbcType=BIGINT},
            </if>
            <if test="shopName != null">
                shop_name = #{shopName,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="orderStatus != null">
                order_status = #{orderStatus,jdbcType=TINYINT},
            </if>
            <if test="payStatus != null">
                pay_status = #{payStatus,jdbcType=TINYINT},
            </if>
            <if test="goodsCount != null">
                goods_count = #{goodsCount,jdbcType=INTEGER},
            </if>
            <if test="totalAmount != null">
                total_amount = #{totalAmount,jdbcType=INTEGER},
            </if>
            <if test="consumerRemark != null">
                consumer_remark = #{consumerRemark,jdbcType=VARCHAR},
            </if>
            <if test="payTime != null">
                pay_time = #{payTime,jdbcType=TIMESTAMP},
            </if>
            <if test="isReturn != null">
                is_return = #{isReturn,jdbcType=BIT},
            </if>
            <if test="salesReturnTime != null">
                sales_return_time = #{salesReturnTime,jdbcType=TIMESTAMP},
            </if>
            <if test="haveChild != null">
                have_child = #{haveChild,jdbcType=BIT},
            </if>
            <if test="lastUpdate != null">
                last_update = #{lastUpdate,jdbcType=TIMESTAMP},
            </if>
            <if test="deliveryTime != null">
                delivery_time = #{deliveryTime,jdbcType=TIMESTAMP},
            </if>
            <if test="postage != null">
                postage = #{postage,jdbcType=DECIMAL},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.bst.common.entity.order.Orders">
    update order_orders
    set order_no = #{orderNo,jdbcType=VARCHAR},
      consumer_id = #{consumerId,jdbcType=VARCHAR},
      consumer_name = #{consumerName,jdbcType=VARCHAR},
      telephone = #{telephone,jdbcType=VARCHAR},
      shop_id = #{shopId,jdbcType=BIGINT},
      shop_name = #{shopName,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      order_status = #{orderStatus,jdbcType=TINYINT},
      pay_status = #{payStatus,jdbcType=TINYINT},
      goods_count = #{goodsCount,jdbcType=INTEGER},
      total_amount = #{totalAmount,jdbcType=INTEGER},
      consumer_remark = #{consumerRemark,jdbcType=VARCHAR},
      pay_time = #{payTime,jdbcType=TIMESTAMP},
      is_return = #{isReturn,jdbcType=BIT},
      sales_return_time = #{salesReturnTime,jdbcType=TIMESTAMP},
      have_child = #{haveChild,jdbcType=BIT},
      last_update = #{lastUpdate,jdbcType=TIMESTAMP},
      delivery_time = #{deliveryTime,jdbcType=TIMESTAMP},
      postage = #{postage,jdbcType=DECIMAL}
    where id = #{id,jdbcType=BIGINT}
  </update>
    <update id="updateOrdersStatus" parameterType="java.lang.Long">
    update order_orders
set order_orders.order_status = 7  where order_orders.id = #{orderId} and order_orders.order_status = 6
  </update>
    <update id="updateByOrderNo">
      	 update order_orders
    set
       order_status = #{status,jdbcType=TINYINT},   last_update = #{lastUpdate,jdbcType=TINYINT},delivery_time = #{lastUpdate,jdbcType=TINYINT}
   where
       order_no = #{orderNo}
    </update>
    <update id="updateOrderPayStatus">
      UPDATE order_orders
      SET order_status = 5,
          pay_type = #{payType},
          pay_status = 2,
          pay_time = NOW()
      WHERE pay_status = #{fromStatus}
        AND order_no = #{orderNo}
  </update>
    <update id="orderTimeout">
    UPDATE order_orders
    SET order_status = 4,
        pay_status = 3
    WHERE pay_status = 1
      AND order_no = #{orderNo}
  </update>
    <update id="updateOrderStatusTimeOut">
    UPDATE order_orders
    SET order_status = 4,
        pay_status = 3
      WHERE order_status = 1 and (HOUR( timediff( now(), create_time) ) >= 2);
  </update>
    <update id="updateOrderStatus">
              UPDATE order_orders
    SET order_status = #{orderStatus}
    WHERE pay_status = #{payStatus}
      AND order_no = #{orderNo}


    </update>
    <update id="updateOrderReturnStatus">
            UPDATE order_orders
    SET is_return = #{statusNo}
    WHERE
       order_no = #{orderNo}
    </update>
    <update id="updateReturnStatus">
            UPDATE order_refund
    SET refund = #{statusNo}
    WHERE
       order_no = #{orderNo}

    </update>


    <select id="initOrderToRedis" parameterType="java.lang.Long" resultMap="BaseResultMap">
       SELECT id, order_no, unix_timestamp(DATE_ADD(create_time,INTERVAL 2 HOUR)) AS timestampNum  FROM `order_orders` WHERE order_status = 1 AND id >#{id} LIMIT 2000;
   </select>

    <select id="queryOrderDetailStatus" resultType="Map" >
            SELECT o.order_status,o.consumer_name,o.telephone,s.province,s.city,s.address,o.order_no,o.create_time,
            o.pay_type,o.pay_time,o.delivery_time,o.total_amount,o.postage,r.pay_amount,ol.dhl
            FROM order_orders o
            INNER JOIN shipping_address s ON o.id = s.orderd_id
            INNER JOIN order_pay_record r ON r.order_id = o.id
            INNER JOIN order_child oc ON oc.main_id = o.id
            INNER JOIN order_logistics ol ON ol.order_id = oc.id
            WHERE o.consumer_id = #{cosumerId}
    </select>

</mapper>